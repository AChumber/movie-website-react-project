{"version":3,"sources":["components/pages/notFoundPage/undraw_home_cinema_l7yl.svg","components/layout/nav/movies-logo.svg","components/layout/nav/searchResultCard/SearchResultCard.js","redux/movies/genresSlice.js","skeletons/BaseSkeleton.js","skeletons/ShimmerAnimation.js","skeletons/skeletonGenresList/SkeletonGenresList.js","components/shared/genreTab/GenreTab.js","components/layout/nav/search/searchByGenre/SearchByGenre.js","skeletons/skeletonSearchResults/SkeletonSearchResults.js","components/layout/nav/search/Search.js","components/layout/nav/Nav.js","redux/movies/trendingMoviesSlice.js","helpers/localStorageHelper.js","redux/movies/myMoviesSlice.js","store.js","components/layout/footer/Footer.js","skeletons/skeletonFeatureMovie/SkeletonFeatureMovie.js","components/pages/homePage/featuredMovie/FeaturedMovie.js","components/pages/homePage/chevron.svg","helpers/getAverageRatingBackgroundColor.js","components/shared/toast/Toast.js","components/shared/movieCard/MovieCard.js","components/shared/horizontalMoviesList/HorizontalMoviesList.js","skeletons/skeletonHorizontalList/SkeletonHorizontalList.js","components/pages/homePage/trendingMovies/TrendingMovies.js","hooks/useFetch.js","components/pages/homePage/topRatedMovies/TopRated.js","components/pages/homePage/HomePage.js","components/shared/loadingSpinner/Spinner.js","components/pages/singleMoviePage/castGrid/castCard/CastCard.js","skeletons/skeletonCastGrid/SkeletonCastGrid.js","components/pages/singleMoviePage/castGrid/CastGrid.js","components/pages/singleMoviePage/detailsTable/DetailsTable.js","components/pages/singleMoviePage/movieAvailability/MovieAvailability.js","components/pages/singleMoviePage/relatedMovies/RelatedMovies.js","skeletons/skeletonSingleMovie/SkeletonSingleMovie.js","components/pages/singleMoviePage/SingleMoviePage.js","components/shared/moviesGrid/MoviesGrid.js","skeletons/skeletonMovieGrid/SkeletonMovieGrid.js","components/pages/listOfMoviesPage/ListOfMovies.js","components/pages/notFoundPage/NotFound.js","components/pages/myMoviesPage/MyMovies.js","skeletons/skeletonGenresGrid/SkeletonGenresGrid.js","components/pages/listOfMoviesPage/listOfMoviesNoParams/genresSection/GenresSection.js","components/pages/listOfMoviesPage/listOfMoviesNoParams/ListOfMoviesNoParams.js","App.js","index.js"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_circle","_circle2","_path7","_circle3","_circle4","_path8","_polygon","_polygon2","_path9","_path10","_path11","_path12","_circle5","_path13","_path14","_path15","_path16","_rect","_path17","_path18","_path19","_path20","_path21","_rect2","_rect3","_rect4","_rect5","_rect6","_rect7","_path22","_path23","_path24","_path25","SearchResultCard","toggleSearchModal","result","navigate","useNavigate","className","onClick","id","poster_path","src","alt","title","loading","fetchGenresList","createAsyncThunk","a","fetch","process","then","res","json","data","genres","catch","err","console","log","genresSlice","createSlice","name","initialState","genresList","isLoading","extraReducers","pending","state","action","fulfilled","payload","rejected","BaseSkeleton","type","ShimmerAnimation","SkeletonGenresList","map","index","GenreTab","genre","SearchByGenre","useSelector","store","dispatch","useDispatch","useEffect","length","slice","SkeletonSearchResults","Search","toggleModal","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearchLoading","setIsSearchLoading","fetchSearchResults","debounce","ok","Error","resData","results","prevState","autoFocus","placeholder","onChange","e","target","value","preventDefault","Nav","isToggleSearch","setIsToggleSearch","isToggleLinks","setIsToggleLinks","window","innerWidth","screenWidth","setScreenWidth","searchRef","useRef","changeScreenWidth","addEventListener","removeEventListener","onLinkClick","useCallback","to","logo","isSearch","CSSTransition","in","nodeRef","unmountOnExit","timeout","classNames","ref","fetchTrendingList","trendingMoviesSlice","trendingList","popularMovie","reducers","refreshPopularMovie","Math","ceil","random","floor","actions","TAG","getLocalStorageMovies","storedArr","localStorage","getItem","JSON","parse","exception","localStorageMiddleware","next","addMovie","match","removeMovie","moviesList","setItem","stringify","putInLocalStorage","getState","myMovies","movies","myMoviesSlice","undefined","find","movie","push","filter","listItem","configureStore","reducer","myMoviesReducer","trendingMovies","middleware","getDefaultMiddleware","concat","Footer","rel","href","SkeletonFeatureMovie","FeaturedMovie","hasOwnProperty","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","backgroundRepeat","overview","getaverageRatingBackgroundColor","rating","Toast","children","toastsContainerRoot","document","getElementById","container","useMemo","createElement","appendChild","remove","ReactDom","createPortal","PositiveFeedbackToast","MovieCard","isAddToMyMovies","isShowToast","setIsShowToast","timer","setTimeout","clearTimeout","vote_average","HorizontalMoviesList","list","TransitionGroup","component","SkeletonHorizontalList","num","TrendingMovies","chevron","useFetch","url","setData","setIsLoading","TopRated","topRatedMovies","HomePage","Spinner","CastCard","castMember","profile_path","character","SkeletonCastGrid","CastGrid","movieId","setDirector","setWriters","castData","director","crew","crewMember","job","department","writer","stringBuilder","arr","forEach","cast","DetailsTable","movieData","currencyFormatter","Intl","NumberFormat","currency","homepage","format","budget","revenue","production_countries","rowSpan","country","production_companies","company","MovieAvailability","provider","logo_path","provider_name","RelatedMovies","relatedMovies","isRelatedMoviesLoading","SkeletonSingleMovie","SingleMoviePage","useParams","writers","scrollTo","runtime","hours","mins","formatRuntime","release_date","tagline","ResultGrid","SkeletonMovieGrid","cards","i","getNumSkeletonMovieCards","ListOfMovies","setResults","page","setPage","useSearchParams","searchParams","params","query","get","genreId","genreName","upperCaseWords","string","split","word","charAt","toUpperCase","capitalise","join","urls","trending","search","fetchFreshData","MoviesGrid","_excluded","_extends","Object","assign","arguments","source","key","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUndrawHomeCinemaL7Yl","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","xmlnsXlink","d","transform","fill","opacity","cx","cy","r","points","x","y","ForwardRef","NotFound","MyMovies","color","SkeletonGenresGrid","GenresSection","ListOfMoviesNoParams","App","path","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0f9ddb49.chunk.js","sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _circle, _circle2, _path7, _circle3, _circle4, _path8, _polygon, _polygon2, _path9, _path10, _path11, _path12, _circle5, _path13, _path14, _path15, _path16, _rect, _path17, _path18, _path19, _path20, _path21, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _path22, _path23, _path24, _path25;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndrawHomeCinemaL7Yl(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 719.76946,\n    height: 687.25,\n    viewBox: \"0 0 719.76946 687.25\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"home_cinema\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M908.88473,288.962V250.375h-6v38.587a8,8,0,1,0,6,0Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#e6e6e6\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M922.88473,678.375h-41v-498h-16v498H824.88467a36.99993,36.99993,0,0,0-36.99994,36.99994v.00006h172v-.00006A36.99994,36.99994,0,0,0,922.88473,678.375Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#e6e6e6\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M787.96774,254.375h171.834L949.29391,123.03467A18.19786,18.19786,0,0,0,931.248,106.375H816.52145a18.19786,18.19786,0,0,0-18.0459,16.65967Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#293241\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M301.21292,563.91061H825.69163V510.36435c0-144.59875-117.6406-262.23935-262.23935-262.23935S301.21292,365.7656,301.21292,510.36435Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#3f3d56\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M301.21292,563.91061H825.69163V510.36435c0-144.59875-117.6406-262.23935-262.23935-262.23935S301.21292,365.7656,301.21292,510.36435Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    opacity: 0.2\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M369.18754,582.44585H772.8198A81.09742,81.09742,0,0,0,691.826,502.813H450.18135A81.09742,81.09742,0,0,0,369.18754,582.44585Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#293241\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 81.00587,\n    cy: 386.82709,\n    r: 81.00587,\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 572.53304,\n    cy: 386.82709,\n    r: 81.00587,\n    fill: \"#3f3d56\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.55066,534.39152V564.5971H377.41336V534.39152H293.66153V681.614a34.011,34.011,0,0,0,34.011,34.011H801.29139a34.011,34.011,0,0,0,34.01111-34.011V534.39152Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#3f3d56\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 81.00587,\n    cy: 386.82709,\n    r: 16.47577,\n    opacity: 0.2\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 572.53304,\n    cy: 386.82709,\n    r: 16.47577,\n    opacity: 0.2\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M593.29318,238.87148s1.61972,30.77465,12.95775,37.25352,0,50.21127,0,50.21127L552.80022,327.956l-3.23944-51.831s6.47888-21.05634,3.23944-30.77465S593.29318,238.87148,593.29318,238.87148Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#ffb8b8\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"413.107 560.102 393.671 582.778 424.446 611.933 440.643 579.539 413.107 560.102\",\n    fill: \"#ffb8b8\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"275.431 560.102 294.868 582.778 264.093 611.933 247.896 579.539 275.431 560.102\",\n    fill: \"#ffb8b8\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M642.69459,451.86444s116.61972,38.87324,110.14084,76.12676-56.69014,168.4507-56.69014,168.4507-27.53521,0-48.59155-29.15493l14.57747-32.39436s-6.47888-17.81691,4.85915-21.05634,17.8169-59.92958,17.8169-59.92958-82.60563-6.47887-100.42253-37.25352l-32.39437-77.74648Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#2f2e41\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M526.07487,451.86444S409.45515,490.73768,415.934,527.9912s56.69014,168.4507,56.69014,168.4507,27.53522,0,48.59155-29.15493l-14.57746-32.39436s6.47887-17.81691-4.85916-21.05634-17.8169-59.92958-17.8169-59.92958,82.60564-6.47887,100.42254-37.25352l32.39436-77.74648Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#2f2e41\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M658.89177,706.16021s16.19718-14.57746,17.8169-3.23944-1.61972,56.69015-1.61972,56.69015,16.19719,34.01408-8.09859,34.01408-35.6338-25.91549-32.39436-51.831-11.338-35.6338-11.338-35.6338-17.8169-35.6338,0-38.87324,24.29577,4.85916,24.29577,4.85916S641.07487,701.30106,658.89177,706.16021Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#2f2e41\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M509.87769,706.16021s-16.19719-14.57746-17.81691-3.23944,1.61972,56.69015,1.61972,56.69015S477.48332,793.625,501.77909,793.625s35.63381-25.91549,32.39437-51.831,11.338-35.6338,11.338-35.6338,17.8169-35.6338,0-38.87324-24.29578,4.85916-24.29578,4.85916S527.69459,701.30106,509.87769,706.16021Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#2f2e41\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 328.07227,\n    cy: 113.86972,\n    r: 37.25352,\n    fill: \"#ffb8b8\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M573.85656,284.22359l-22.67606-17.8169-55.07042,25.91549-1.61972,147.39437s-34.01408,16.19718-24.29577,37.25352c0,0,29.15493,6.47887,42.11267,19.43662s85.84507-4.85915,116.61972-14.57746,38.87324-21.05634,38.87324-21.05634l-30.77465-43.7324,17.8169-111.76056L599.7782,268.25887Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#e6e6e6\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M613.47841,194.88912a32.72327,32.72327,0,0,1-2.22094-3.4469c-1.15512-2.81332.66946-6.12871-1.03543-8.75574-1.7404-2.68175-6.15869-3.24731-9.16482-5.06919-4.63088-2.80657-5.47263-8.31373-9.81145-11.40651-3.12615-2.22838-7.58418-2.82906-11.76168-2.70194s-8.29915.88239-12.47838.96527a37.62165,37.62165,0,0,1-16.3771-3.34911l3.08305,6.03082a30.7761,30.7761,0,0,1-9.678-3.92278c-1.3636,1.69136,1.1312,4.25855-.41564,5.845a4.96343,4.96343,0,0,1-2.18434,1.01281,52.24553,52.24553,0,0,0-16.53785,8.06827,8.31019,8.31019,0,0,0-2.78289,2.93788c-.8036,1.7809-.09107,3.74785-.15191,5.64139-.11054,3.44069-2.73736,6.441-4.60127,9.54054s-2.87034,7.118-.10591,9.74867a25.13472,25.13472,0,0,1,1.9317,1.70333c2.76984,3.26725-2.1332,8.052.23,11.51909,1.02607,1.50533,3.1292,2.26716,4.95713,3.15648a19.80713,19.80713,0,0,1,8.4742,7.55282L531.42613,219.531a1.72023,1.72023,0,0,1,.2829-1.519c.68812-.70137,2.12943-.42179,3.07917-.88624,1.04507-.51108,1.124-1.68341,1.08247-2.66528l-.31984-7.57123c-.14382-3.40457-.1836-3.85668,2.32377-6.60478,1.75174-1.91993,4.50741-3.07833,7.27533-3.93024,6.3253-1.94679,13.12847-2.62018,19.85287-3.27824,7.809-.7642,16.60205-4.55325,22.66652-.53025,4.96433,3.2932,6.61488,8.70626,9.00682,13.507,2.15,4.315,7.668,17.02,12.26163,10.1427C611.82261,211.87644,616.235,199.698,613.47841,194.88912Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#2f2e41\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M574.583,209.438a.57962.57962,0,0,0-.5791.57861v15.59717a.57962.57962,0,0,0,.5791.57861h26.84961a.57962.57962,0,0,0,.5791-.57861V210.0166a.57962.57962,0,0,0-.5791-.57861Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#3f3d56\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M577.58346,210.81348a1.07985,1.07985,0,0,0-1.07861,1.07861v11.84619a1.07985,1.07985,0,0,0,1.07861,1.07861h20.84863a1.07985,1.07985,0,0,0,1.07861-1.07861V211.89209a1.07985,1.07985,0,0,0-1.07861-1.07861Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#ff6584\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 320.78354,\n    y: 108.2007,\n    width: 13.98592,\n    height: 3.23944,\n    fill: \"#3f3d56\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M536.562,209.438a.57952.57952,0,0,0-.57861.57861v15.59717a.57952.57952,0,0,0,.57861.57861h26.8501a.57953.57953,0,0,0,.57862-.57861V210.0166a.57953.57953,0,0,0-.57862-.57861Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#3f3d56\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M539.563,210.81348a1.08,1.08,0,0,0-1.0791,1.07861v11.84619a1.08,1.08,0,0,0,1.0791,1.07861H560.4111a1.08,1.08,0,0,0,1.0791-1.07861V211.89209a1.08,1.08,0,0,0-1.0791-1.07861Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#293241\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.76944,297.75h93a14,14,0,0,1,14,14v0a0,0,0,0,1,0,0h-121a0,0,0,0,1,0,0v0A14,14,0,0,1,281.76944,297.75Z\",\n    fill: \"#3f3d56\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M621.38473,403.125a4.96123,4.96123,0,0,0-1.59918.27228,2.99462,2.99462,0,0,0-5.90082.72772c0,.01495.00372.02881.004.0437a5.14183,5.14183,0,0,0-1.10321.22858,3.01113,3.01113,0,0,0-1.483-1.911,5.017,5.017,0,0,0,2.16407-2.36859,4.02054,4.02054,0,1,0-.08185-7.99268,4.96123,4.96123,0,0,0-1.59918.27228,2.99013,2.99013,0,1,0-5.749,1.62506c-.11956.08319-.23108.17663-.34283.26959a2.83951,2.83951,0,0,0-2.04492-.68066,4.98044,4.98044,0,0,0-9.68311,1.55066,5.11773,5.11773,0,0,0-1.18017.23535,2.9999,2.9999,0,0,0-.17249-.49353,3.75781,3.75781,0,0,0,1.27167-2.77875,4.27213,4.27213,0,0,0-4.5-4,4.96123,4.96123,0,0,0-1.59918.27228,2.99013,2.99013,0,1,0-5.749,1.62506,4.98706,4.98706,0,0,0-2.13726,3.8692c-.0423.0376-.09076.068-.13086.10791a3.56328,3.56328,0,0,0,.11627-.87445,4.27213,4.27213,0,0,0-4.5-4,4.96123,4.96123,0,0,0-1.59918.27228,2.99013,2.99013,0,1,0-5.749,1.62506,4.98694,4.98694,0,0,0,0,8.20532,2.72729,2.72729,0,0,0,0,1.79468,5.04888,5.04888,0,0,0-1.27935,1.29181,2.98133,2.98133,0,0,0-5.84162.50488,4.764,4.764,0,0,0-1.28564-.51941,5.02681,5.02681,0,0,0,1.83661-2.18194,4.02054,4.02054,0,1,0-.08185-7.99268,4.96123,4.96123,0,0,0-1.59918.27228,2.99013,2.99013,0,1,0-5.749,1.62506c-.06414.04462-.12194.09711-.1839.14459-.156-.01453-.30767-.04193-.46795-.04193a4.96123,4.96123,0,0,0-1.59918.27228c-.01892-.07544-.05-.14545-.07447-.21851a2.94689,2.94689,0,0,0-3.06225-3.5675,4.9952,4.9952,0,1,0-7.85071,5.56543,5.17336,5.17336,0,0,0-1.01257.22058,2.973,2.973,0,0,0-4.76184-1.6084,4.67579,4.67579,0,0,0-3.639-1.66388,4.96123,4.96123,0,0,0-1.59918.27228,2.99013,2.99013,0,1,0-5.749,1.62506,4.98907,4.98907,0,0,0-2.15185,4.10266c0,.0155.00445.02972.00458.04517a4.14774,4.14774,0,0,0-2.10376.22711,2.99013,2.99013,0,1,0-5.749,1.62506,4.97953,4.97953,0,0,0,3.93555,8.96979,4.98218,4.98218,0,0,0,9.414,1.27893,31.17007,31.17007,0,0,0,10.80249-.48676,4.9821,4.9821,0,0,0,9.278.33338,4.89172,4.89172,0,0,0,2.09741-.519,4.97708,4.97708,0,0,0,8.90259-.481,4.84375,4.84375,0,0,1,5.41815,3.00732,7.79929,7.79929,0,0,1,5.74383-3.17871,4.87476,4.87476,0,0,0,5.41455-2.06775,4.99772,4.99772,0,0,0,9.42347,3.23914,4.89172,4.89172,0,0,0,2.09741-.519,4.97708,4.97708,0,0,0,8.90259-.481,4.89172,4.89172,0,0,0,2.09741-.519,4.94793,4.94793,0,0,0,7.41247,1.43671,4.97874,4.97874,0,0,0,8.90613,2.06525,4.96583,4.96583,0,0,0,7.584-1.983,4.02054,4.02054,0,1,0-.08185-7.99268Zm-89.37818-2.06384c-.00524.02411-.00891.04883-.01385.07312-.0365-.00135-.07111-.00928-.108-.00928a2.9781,2.9781,0,0,0-.44556.04492c.00812-.018.01953-.03412.02741-.05224A4.9796,4.9796,0,0,0,532.00655,401.06116Zm41.779-1.66388c-.01459-.05823-.03955-.11176-.05744-.16858a5.0243,5.0243,0,0,0,1.73847-2.111,4.68136,4.68136,0,0,0,3.4768-1.57435,3.00916,3.00916,0,0,0-.05865.58167,2.96721,2.96721,0,0,0,.15185.89734,5.01837,5.01837,0,0,0-1.85888,2.437,4.90717,4.90717,0,0,0-3.39215-.062Zm29.95037.37286c-.002-.06128.00562-.12445.00159-.1853a2.98582,2.98582,0,0,0,.38111-.02588,4.95614,4.95614,0,0,0,.95263,1.76471c-.09442.02649-.19378.04242-.2857.07361A3.01575,3.01575,0,0,0,603.73592,399.77014Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#f9a825\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M517.958,409.125a10.441,10.441,0,0,0-10.42676,11.002l6.77149,93.11524a10.44058,10.44058,0,0,0,10.42675,9.88281H612.04a10.44058,10.44058,0,0,0,10.42676-9.88281l6.77148-93.11524a10.441,10.441,0,0,0-10.42675-11.002Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#3f3d56\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 282.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 299.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 316.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 333.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 350.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 367.76946,\n    y: 302.75,\n    width: 6,\n    height: 114,\n    fill: \"#293241\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M607.87064,465.632l-19.43662,11.338s-46.97183,38.87324-14.57746,45.35211,40.493-27.53521,40.493-27.53521l11.338-12.95774Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#ffb8b8\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M515.5467,457.53345l19.43662,11.338s46.97183,38.87324,14.57746,45.35211-40.493-27.53521-40.493-27.53521l-11.338-12.95775Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#ffb8b8\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M633.78614,303.66021l21.05633,1.61972s16.19719,14.57746,14.57747,34.01408c0,0,14.57746,42.11268,11.338,59.92958,0,0,3.23943,29.15493-1.61972,40.493S633.78614,494.787,633.78614,494.787s-37.25352-29.15493-35.63381-30.77465l48.59155-48.59155-24.29577-32.39436Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#e6e6e6\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M496.11008,292.32218l-.80986.80986s-36.44366,15.38733-34.82394,34.82395c0,0-14.57747,42.11267-11.338,59.92957,0,0-3.23944,29.15493,1.61972,40.493s45.35211,55.07042,45.35211,55.07042,37.25352-29.15493,35.6338-30.77464l-48.59155-48.59155,24.29578-32.39437Z\",\n    transform: \"translate(-240.11527 -106.375)\",\n    fill: \"#e6e6e6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawHomeCinemaL7Yl);\nexport default __webpack_public_path__ + \"static/media/undraw_home_cinema_l7yl.861dd5ff.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/movies-logo.7792ac02.svg\";","import React from 'react';\r\nimport './searchResultCard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SearchResultCard = ({ toggleSearchModal, result }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const onCardClick = () => {\r\n        toggleSearchModal();\r\n        navigate(`/movie/${result.id}`);\r\n    }\r\n\r\n    return (\r\n        <div className='search-result-card' onClick={ onCardClick }>\r\n            {\r\n                result.poster_path !== null ?\r\n                    <img className='search-result-card-img' \r\n                        src={`https://image.tmdb.org/t/p/original${result.poster_path}`} \r\n                        alt={`${result.title}`}\r\n                        loading='lazy' /> :\r\n                    <div className='search-result-card-no-img'></div>\r\n            }\r\n            <p className='search-result-card-title'>{result.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResultCard\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchGenresList = createAsyncThunk(\r\n    'genres/getGenresList',\r\n    async () => {\r\n        //return the data fetched in this callback\r\n        return await fetch(`${process.env.REACT_APP_API_BASE_URL}/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(res => res.json())\r\n            .then(data => data.genres) //get the 'genres' list from the data object\r\n            .catch(err => console.log(err));\r\n    }\r\n)\r\n\r\nconst genresSlice = createSlice({\r\n    name: 'genres',\r\n    initialState: {\r\n        genresList: [],\r\n        isLoading: null\r\n    },\r\n    extraReducers: {\r\n        [fetchGenresList.pending]: (state, action) => {\r\n            state.isLoading = true;\r\n        },\r\n        [fetchGenresList.fulfilled]: (state, action) => {\r\n            //result of getGenresList is fetched data which gets passed via action.payload\r\n            state.genresList = (action.payload);\r\n            state.isLoading = false;\r\n        },\r\n        [fetchGenresList.rejected]: (state, action) => {\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport default genresSlice.reducer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './baseSkeleton.css';\r\n\r\nconst BaseSkeleton = ({ type }) => {\r\n    return(<div className={`skeleton ${type}`}></div>)\r\n};\r\n\r\nBaseSkeleton.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BaseSkeleton;\r\n","import React from 'react';\r\n\r\nconst ShimmerAnimation = () => {\r\n  return <div className='shimmer-wrapper'>\r\n    <div className='shimmer'></div>\r\n  </div>;\r\n};\r\n\r\nexport default ShimmerAnimation;\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\nimport './skeletonGenresList.css';\r\n\r\nconst SkeletonGenresList = () => {\r\n    return (\r\n        <div className='skeleton-wrapper'>\r\n            <ShimmerAnimation />\r\n            <div className='skeleton-tab-container'>\r\n                {\r\n                    [1,2,3,4,5,6].map(index => <BaseSkeleton key={index} type='tab' />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonGenresList;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './genreTab.css';\r\n\r\nconst GenreTab = ({ genre }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className='search-genre-tab' onClick={ () => navigate(`/list/genre?genre_id=${genre.id}&genre=${genre.name}`) }>\r\n            <p>{ genre.name }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenreTab;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { fetchGenresList } from '../../../../../redux/movies/genresSlice'; //dispatch this\r\nimport SkeletonGenresList from '../../../../../skeletons/skeletonGenresList/SkeletonGenresList';\r\nimport GenreTab from '../../../../shared/genreTab/GenreTab';\r\nimport './searchByGenre.css';\r\n\r\n\r\nconst SearchByGenre = () => {\r\n    const { genresList, isLoading } = useSelector(store => store.genres);\r\n    const dispatch = useDispatch();\r\n\r\n    //useEffect to prevent more than one dispatch of fetching data\r\n    useEffect(() => {\r\n        //check redux state is genres list exist(length > 0) else dispatch async thunk \r\n        if(genresList.length === 0) {\r\n            dispatch(fetchGenresList());\r\n        }\r\n    }, [dispatch, genresList.length]);\r\n    \r\n\r\n    return (\r\n        <div className='search-modal-genres'>\r\n            <h2>Search By Genre</h2>\r\n            <div className='search-modal-genres-container'>\r\n                {\r\n                    !isLoading ? (\r\n                        genresList.slice(0,6).map(genre => (\r\n                            <GenreTab genre={ genre } key={genre.id} />\r\n                        ))\r\n                    ) : (\r\n                        <SkeletonGenresList />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchByGenre;\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\n\r\nconst SkeletonSearchResults = () => {\r\n    return (        \r\n        [1,2,3,4,5,6,7,8,9].map(index => (\r\n            <div className='skeleton-wrapper' key={index}>\r\n                <ShimmerAnimation />\r\n                <BaseSkeleton type='search-card' />\r\n            </div>\r\n        ))\r\n    );\r\n};\r\n\r\nexport default SkeletonSearchResults;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\nimport './search.css';\r\nimport SearchResultCard from '../searchResultCard/SearchResultCard';\r\nimport SearchByGenre from './searchByGenre/SearchByGenre';\r\nimport SkeletonSearchResults from '../../../../skeletons/skeletonSearchResults/SkeletonSearchResults';\r\n\r\nconst Search = ({ toggleModal }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const fetchSearchResults = debounce(async (searchTerm) => {\r\n        setSearchTerm(searchTerm);\r\n        if(searchTerm !== ''){\r\n            setIsSearchLoading(true);\r\n            await fetch(`${process.env.REACT_APP_API_BASE_URL}/search/movie?query=${searchTerm}&api_key=${process.env.REACT_APP_API_KEY}`)\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw new Error(\"Error fetching query results. Response not OK\");\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(resData =>{\r\n                        setSearchResults(resData.results.slice(0, 9));\r\n                        setIsSearchLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    setIsSearchLoading(false);\r\n                });\r\n        } else {\r\n            setSearchResults([]);\r\n        }\r\n    }, 500);\r\n\r\n    const toggleSearchModal = () => toggleModal(prevState => !prevState)\r\n\r\n    const onExploreBtnClick = (e) => {\r\n        e.preventDefault();\r\n        navigate(`/list/search?query=${searchTerm}`);\r\n        toggleModal();\r\n    }\r\n\r\n    return (\r\n        <div className='search-modal'>\r\n            <div className='search-input-container'>\r\n                <div className='search-modal-close-btn' onClick={ toggleSearchModal }>\r\n                    <i className=\"bi bi-x\"></i>\r\n                    <p><small>Close Search</small></p>\r\n                </div>\r\n                <input \r\n                    autoFocus\r\n                    className='search-input'\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\" \r\n                    onChange={ (e) => fetchSearchResults(e.target.value) } >\r\n                </input>\r\n            </div>\r\n\r\n            <SearchByGenre />\r\n\r\n            <div className='search-modal-results'>\r\n                <h2>Results</h2>\r\n                <div className='search-modal-results-grid'>\r\n                    {\r\n                        (!isSearchLoading) ?\r\n                            (searchResults.length !== 0 ? \r\n                                (\r\n                                    searchResults.map(result => (\r\n                                        <SearchResultCard toggleSearchModal={ toggleSearchModal } result={ result } key={ result.id }/>)\r\n                                    )\r\n                                ) :\r\n                                (<p></p>)\r\n                            ) :\r\n                            ( <SkeletonSearchResults /> )\r\n                    }\r\n                </div>\r\n                {\r\n                    (!isSearchLoading && searchResults.length !== 0) && (\r\n                        <button className='primary-btn' onClick={ onExploreBtnClick }>Explore More</button>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './nav.css';\r\nimport logo from './movies-logo.svg';\r\nimport Search from './search/Search';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Nav = () => {\r\n    const [isToggleSearch, setIsToggleSearch] = useState(false);\r\n    const [isToggleLinks, setIsToggleLinks] = useState(false);\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const searchRef = useRef(null);  //reference search container div to use in CSSTransition via noderef. Otherwise error occurs\r\n\r\n    useEffect(() => {\r\n        //https://dev.to/ziratsu/code-a-responsive-navbar-with-react-45le - responsive navbar\r\n        const changeScreenWidth = () => {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n        window.addEventListener('resize', changeScreenWidth);\r\n        return () => {\r\n            window.removeEventListener('resize', changeScreenWidth);\r\n        }\r\n    })\r\n\r\n    //Close links drawer once an link is clicked\r\n    const onLinkClick = useCallback(() => setIsToggleLinks(prevState => !prevState), []);\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"nav\">\r\n                <Link to=\"/\"><img className=\"logo\" src={ logo } alt='Movies Logo'/></Link>\r\n                <div className=\"nav-toggle-menu-btn\" onClick={() => setIsToggleLinks(!isToggleLinks)}>\r\n                    <div className={ isToggleLinks ? \"toggle\" : \"\" } id=\"line1\"></div>\r\n                    <div className={ isToggleLinks ? \"toggle\" : \"\" } id=\"line2\"></div>\r\n                    <div className={ isToggleLinks ? \"toggle\" : \"\" } id=\"line3\"></div>\r\n                </div>\r\n                {(isToggleLinks || screenWidth > 920) && (\r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/list/trending\" className=\"nav-link\" onClick={ onLinkClick }>Trending</Link>\r\n                        <Link to=\"/list/new%20releases\" className=\"nav-link\" onClick={ onLinkClick }>New Releases</Link>\r\n                        <Link to=\"/list/my-movies\" className=\"nav-link\" onClick={ onLinkClick }>My Movies</Link>\r\n                        {/* Toggle Search component when pressed */}\r\n                        <div className='nav-link nav-search-icon' onClick={ () => setIsToggleSearch(isSearch => !isSearch) }>\r\n                            <i className=\"bi bi-search\"></i>\r\n                        </div>\r\n                    </div> \r\n                )}\r\n            </nav>\r\n            <CSSTransition in={isToggleSearch} nodeRef={searchRef} unmountOnExit timeout={500} classNames=\"search-transition\">\r\n                {\r\n                    isToggleSearch ?(\r\n                        <div className='search-container' ref={searchRef}>\r\n                            <Search toggleModal={ setIsToggleSearch } />\r\n                        </div>\r\n                    ) : <></>\r\n                }\r\n            </CSSTransition>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchTrendingList = createAsyncThunk(\r\n    'trendingMovies/getTrendingList',\r\n    async () => {\r\n        //return the data fetched in this callback\r\n        return await fetch(`${process.env.REACT_APP_API_BASE_URL}/trending/movie/week?api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(res => res.json())\r\n            .then(data => data.results) \r\n            .catch(err => console.log(err));\r\n    }\r\n)\r\n\r\nexport const trendingMoviesSlice = createSlice({\r\n    name: 'trendingMovies',\r\n    initialState: {\r\n        trendingList: [],\r\n        popularMovie: {},\r\n        isLoading: null\r\n    },\r\n    reducers: {\r\n        refreshPopularMovie: (state, action) => {\r\n            state.popularMovie = state.trendingList[Math.ceil(Math.random() * state.trendingList.length)];\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchTrendingList.pending]: (state, action) => {\r\n            state.isLoading = true;\r\n        },\r\n        [fetchTrendingList.fulfilled]: (state, action) => {\r\n            state.trendingList = action.payload;\r\n            state.popularMovie = state.trendingList[Math.floor(Math.random() * state.trendingList.length)];\r\n            state.isLoading = false;\r\n        },\r\n        [fetchTrendingList.rejected]: (state, action) => {\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { refreshPopularMovie } = trendingMoviesSlice.actions;\r\nexport default trendingMoviesSlice.reducer;\r\n","const TAG = 'myMovies';\r\n\r\nexport const getLocalStorageMovies = () => {\r\n    try {\r\n        const storedArr = localStorage.getItem(TAG);\r\n        return JSON.parse(storedArr);\r\n    } catch(exception) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const putInLocalStorage = (moviesList) => {\r\n    try {\r\n        localStorage.setItem(TAG, JSON.stringify(moviesList));\r\n    } catch(exception) {\r\n        console.log(exception);\r\n    }\r\n}","/*\r\nRedux slice to save a global state of movies a user can save\r\n*/\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { getLocalStorageMovies, putInLocalStorage } from '../../helpers/localStorageHelper';\r\n\r\n//Custom middleware to save movies list to localstorage, Ran when an action is dispatched\r\nexport const localStorageMiddleware = store => next => action => {\r\n    let result = null;\r\n    if(addMovie.match(action) || removeMovie.match(action)) {\r\n        result = next(action); //invoke next action to get up to date state from store variable\r\n        putInLocalStorage(store.getState().myMovies.movies);\r\n    }\r\n\r\n    //always return to complete the dispatch of the action to the store\r\n    return !result ? next(action) : result;\r\n}\r\n\r\nexport const myMoviesSlice = createSlice({\r\n    name: 'myMovies',\r\n    initialState: {\r\n        //check localstorage if movies list exist\r\n        movies: (!getLocalStorageMovies()) ? [] : getLocalStorageMovies()\r\n    },\r\n    reducers: {\r\n        addMovie: (state, action) => {\r\n            //check if movie already is in state. evaluates to undefined if movie not in state thus saving to state\r\n            if(state.movies.find(movie => movie.id === action.payload.id) === undefined) {\r\n                //add action.payload (movie object) to state\r\n                state.movies.push(action.payload);\r\n            }\r\n        },\r\n        removeMovie: (state, action) => {\r\n            //remove movie with matching id (from action.payload which contains movieId)\r\n            state.movies = state.movies.filter(listItem => listItem.id !== action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addMovie, removeMovie } = myMoviesSlice.actions;\r\nexport default myMoviesSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport trendingMoviesSlice from './redux/movies/trendingMoviesSlice';\r\nimport myMoviesReducer, { localStorageMiddleware } from './redux/movies/myMoviesSlice';\r\nimport genresSlice from './redux/movies/genresSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        genres: genresSlice,\r\n        myMovies: myMoviesReducer,\r\n        trendingMovies: trendingMoviesSlice,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(localStorageMiddleware)\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './footer.css';\r\nimport logo from '../nav/movies-logo.svg';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className='footer-logo'>\r\n                <Link to=\"/\" ><img className=\"logo\" src={ logo } alt='Movies Logo' /></Link>\r\n                <p>Movies - Find yours</p>\r\n            </div>\r\n            <p><i>This is a project using an external API - <a rel='noreferrer' target=\"_blank\" href='https://developers.themoviedb.org'><b>TheMoviesDB</b></a> </i></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\nimport './skeletonFeatureMovie.css';\r\n\r\nconst SkeletonFeatureMovie = () => {\r\n    return (\r\n        <div className='skeleton-wrapper'>\r\n            <ShimmerAnimation />\r\n            <div className='skeleton-featured-movie-container'>\r\n                <BaseSkeleton type='image' />\r\n                <div className='skeleton-featured-movie-details'>\r\n                    <BaseSkeleton type='title'/><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton type='text' /><br />\r\n                    <BaseSkeleton className='skeleton-featured-movie-btn' type='button' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonFeatureMovie;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchTrendingList, refreshPopularMovie } from '../../../../redux/movies/trendingMoviesSlice';\r\nimport SkeletonFeatureMovie from '../../../../skeletons/skeletonFeatureMovie/SkeletonFeatureMovie';\r\nimport './featuredMovie.css';\r\n\r\nconst FeaturedMovie = () => {\r\n    const { trendingList, popularMovie, isLoading } = useSelector(state => state.trendingMovies);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(trendingList.length === 0) {\r\n            dispatch(fetchTrendingList());\r\n        }\r\n        dispatch(refreshPopularMovie());\r\n    }, [dispatch, trendingList.length])\r\n\r\n    return (\r\n        <div className=\"featured-movie\">\r\n            {\r\n                (!isLoading && popularMovie.hasOwnProperty('title')) ? (\r\n                <>\r\n                    <div className=\"featured-movie-bg-img\" style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${popularMovie.backdrop_path})`,\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        filter: 'blur(3px)' \r\n                    }}></div>\r\n                    <div className=\"featured-movie-details\">\r\n                        <div className='featured-movie-poster-container'>\r\n                            <img className=\"featured-movie-poster\" src={'https://image.tmdb.org/t/p/w400'+popularMovie.poster_path} alt={`${popularMovie.title} poster`} />\r\n                        </div>\r\n                        <div className=\"featured-movie-card\">\r\n                            <div className=\"featured-movie-text\">\r\n                                <h1><b>{ popularMovie.title }</b></h1>\r\n                                <p>{ popularMovie.overview }</p>\r\n                            </div>\r\n                            <div className=\"featured-movie-btns\">\r\n                                <Link to={`/movie/${popularMovie.id}`} className=\"featured-cta\">Explore Movie</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                ) : (\r\n                    <SkeletonFeatureMovie />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeaturedMovie\r\n","export default __webpack_public_path__ + \"static/media/chevron.e21eb26e.svg\";","export const getaverageRatingBackgroundColor = (rating) => {\r\n    if(rating >= 7) {\r\n        return 'percent-high';\r\n    } else if(rating > 4 && rating < 7) {\r\n        return 'percent-medium';\r\n    } else {\r\n        return 'percent-low';\r\n    }\r\n}","import React, { useEffect, useMemo } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nconst Toast = ({ children }) => {\r\n    const toastsContainerRoot = document.getElementById('toast-container');\r\n    const container = useMemo(() => document.createElement('div'), []);  //prevent re-creation every re-render\r\n    \r\n    useEffect(() => {\r\n        //append empty div\r\n        toastsContainerRoot.appendChild(container);\r\n    \r\n        //cleanup - remove toast container\r\n        return () => {\r\n            container.remove();\r\n        };\r\n    });\r\n    \r\n\r\n    return ReactDom.createPortal(children, toastsContainerRoot);\r\n};\r\n\r\nexport const PositiveFeedbackToast = ({ children }) => {\r\n    return(\r\n        <Toast>\r\n            <div className=\"toast\">\r\n                <p><span className='toast-icon-span'><i className=\"bi bi-check\"></i></span>{children}</p>\r\n            </div>\r\n        </Toast>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './movieCard.css';\r\nimport { getaverageRatingBackgroundColor } from '../../../helpers/getAverageRatingBackgroundColor';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addMovie, removeMovie } from '../../../redux/movies/myMoviesSlice';\r\nimport { PositiveFeedbackToast } from '../toast/Toast';\r\n\r\nconst MovieCard = ({ movie, isAddToMyMovies = true }) => {\r\n    const [isShowToast, setIsShowToast] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let timer = null;\r\n        //change state only if true to remove toast after 5 seconds\r\n        if(isShowToast) {\r\n            timer = setTimeout(() => {\r\n                setIsShowToast(false);\r\n            }, 3000);\r\n        }\r\n\r\n        //cleanup remove timer is not null\r\n        return () => {\r\n            if(timer !== null) {\r\n                clearTimeout(timer);\r\n            }\r\n        }\r\n    }, [isShowToast])\r\n\r\n    const onAddMovieBtnClick = () => {\r\n        //dispatch and create a toast to show the action has been done\r\n        dispatch(addMovie(movie));\r\n        setIsShowToast(prevState => !prevState);\r\n    }\r\n\r\n    const onRemoveMovieBtnClick = () => {\r\n        //dispatch remove movie and toast to show action has been done\r\n        dispatch(removeMovie(movie.id));\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className='movie-card-container'>\r\n            <div className='movie-card-navigator' onClick={ () => navigate(`/movie/${movie.id}`) }></div>\r\n            <img className='movie-card-img' \r\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`} \r\n                alt={`${ movie.title } poster`} \r\n                loading='lazy' />\r\n            <div className='movie-card-overlay'>\r\n                <p className='movie-card-title'>{ movie.title }</p>\r\n                <p className={`movie-card-rating ${getaverageRatingBackgroundColor(movie.vote_average)}`}>{ movie.vote_average }</p>\r\n            </div>\r\n            <button className='movie-card-add-btn'\r\n                onClick={ isAddToMyMovies ? onAddMovieBtnClick : onRemoveMovieBtnClick }>\r\n                    {`${ isAddToMyMovies ? 'Add to': 'Remove From' } My Movies`}\r\n            </button>\r\n\r\n            { isShowToast && (\r\n                <PositiveFeedbackToast>Movie Added to your list</PositiveFeedbackToast>\r\n            ) \r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","import React from 'react';\r\nimport MovieCard from '../movieCard/MovieCard';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './horizontalMoviesList.css';\r\n\r\nconst HorizontalMoviesList = ({ list, isAddToMyMovies = true }) => {\r\n    return (\r\n        <div className='horizontal-movies-list'>\r\n                <TransitionGroup component={null}>\r\n                {list.map(movie => (\r\n                    <CSSTransition key={ movie.id } timeout={900} classNames='horizontal-movies-list-transition'>\r\n                        <div className='horizontal-movies-list-movie-container'>\r\n                            <MovieCard movie={ movie } isAddToMyMovies={ isAddToMyMovies } />\r\n                        </div>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HorizontalMoviesList;\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\nimport './skeletonHorizontalList.css';\r\n\r\nconst SkeletonHorizontalList = () => {\r\n    return(\r\n        <div className='skeleton-wrapper'>\r\n            <ShimmerAnimation />\r\n            <div className='skeleton-card-list-container'>\r\n                {\r\n                    [1,2,3,4,5,6,7,8,9].map(num => <BaseSkeleton key={num} type='card' />)\r\n                }\r\n            </div>\r\n            <BaseSkeleton type='text' />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SkeletonHorizontalList;\r\n","//A horizontal list of movie cards which display details on hover. \r\n//Get list from movieDB API and store in redux slice as may use in other components down the tree (like recommendations)\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport './trendingMovies.css';\r\nimport chevron from '../chevron.svg';\r\nimport HorizontalMoviesList from '../../../shared/horizontalMoviesList/HorizontalMoviesList';\r\nimport SkeletonHorizontalList from '../../../../skeletons/skeletonHorizontalList/SkeletonHorizontalList';\r\n\r\nconst TrendingMovies = () => {\r\n    const { trendingList, isLoading } = useSelector(state => state.trendingMovies);\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <section className='trending-movies-section movie-list-section' id='#trending'>\r\n            <div className='trending-movies-decor movie-list-section-decor'></div>\r\n            <div className='title' onClick={ () => navigate('/list/trending') }>\r\n                <h2 className='title-text'>Trending Movies</h2>\r\n                <p className='title-extra-text'>- Explore More <img className='title-chevron' src={ chevron } alt='Explore more Trending Movies' /></p>\r\n            </div>\r\n            {\r\n                !isLoading ? (\r\n                    <HorizontalMoviesList list={ trendingList.slice(0, 10) } />\r\n                ) : (\r\n                    <SkeletonHorizontalList />\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TrendingMovies\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        (() => {\r\n            fetch(url)\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw new Error(\"Error Fetching Data. Response not OK\");\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(resData =>{\r\n                        setData(resData)\r\n                        setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    setIsLoading(false);\r\n                });\r\n        })()\r\n    }, [url])\r\n\r\n    return { data, isLoading };\r\n}\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport chevron from '../chevron.svg';\r\nimport './topRated.css';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport HorizontalMoviesList from '../../../shared/horizontalMoviesList/HorizontalMoviesList';\r\nimport SkeletonHorizontalList from '../../../../skeletons/skeletonHorizontalList/SkeletonHorizontalList';\r\n\r\nconst TopRated = () => {\r\n    const navigate = useNavigate();\r\n    const { data:topRatedMovies, isLoading } = useFetch(`${process.env.REACT_APP_API_BASE_URL}/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&page=1`)\r\n\r\n    return (\r\n        <section className='new-releases-section movie-list-section'>\r\n            <div className='new-releases-decor movie-list-section-decor'></div>\r\n            <div className='title' onClick={ () => navigate(\"/list/top%20rated\") }>\r\n                <h2 className='title-text'>Top Rated</h2>\r\n                <p className='title-extra-text'>- Explore More <img className='title-chevron' src={ chevron } alt='Explore more Top Rated Movies' /></p>\r\n            </div>\r\n            {\r\n                !isLoading ? (\r\n                    <HorizontalMoviesList list={ topRatedMovies.results.slice(0, 10) } />\r\n                ) : (\r\n                    <SkeletonHorizontalList />\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TopRated;\r\n","import React from 'react'\r\nimport FeaturedMovie from './featuredMovie/FeaturedMovie';\r\nimport TrendingMovies from './trendingMovies/TrendingMovies';\r\nimport TopRated from './topRatedMovies/TopRated';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <>\r\n            <FeaturedMovie />\r\n            <TrendingMovies />\r\n            <TopRated />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport './castCard.css';\r\n\r\nconst CastCard = ({ castMember }) => {\r\n    return (\r\n        <div className='cast-card'>\r\n            {\r\n                !castMember.profile_path ?\r\n                    (<div className='placeholder-cast-image'>\r\n                        <div className='placeholder-cast-card-head'></div>\r\n                        <div className='placeholder-cast-card-body'></div>\r\n                    </div>) :\r\n                    (<img className='cast-card-profile-image' \r\n                    src={`https://image.tmdb.org/t/p/w200${castMember.profile_path}`} \r\n                    alt={`${ castMember.name }`} />)\r\n            }\r\n            <div className='cast-card-overlay'>\r\n                <p className='cast-card-actor-name'>{ castMember.name }</p>\r\n                <p className='cast-card-character-name'>{ castMember.character }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastCard\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\n\r\nconst SkeletonCastGrid = () => {\r\n    return [1,2,3,4,5,6,7,8,9,10,11,12].map(index => (\r\n        <div className='skeleton-wrapper' key={index}>\r\n            <ShimmerAnimation />\r\n            <BaseSkeleton type='cast-card' />\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default SkeletonCastGrid;\r\n","import React, { useEffect } from 'react';\r\nimport CastCard from './castCard/CastCard';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport './castGrid.css';\r\nimport SkeletonCastGrid from '../../../../skeletons/skeletonCastGrid/SkeletonCastGrid';\r\n\r\nconst CastGrid = ({ movieId, setDirector, setWriters }) => {\r\n    const { data:castData, isLoading } = useFetch(`${process.env.REACT_APP_API_BASE_URL}/movie/${movieId}/credits?api_key=${process.env.REACT_APP_API_KEY}`);\r\n\r\n    useEffect(() => {\r\n        if(!isLoading) {\r\n            let director = castData.crew\r\n                .filter(crewMember => crewMember.job === \"Director\" && crewMember.department === \"Directing\");\r\n            \r\n            let writer = castData.crew\r\n                .filter(crewMember => crewMember.job === \"Writer\" && crewMember.department === \"Writing\");\r\n    \r\n            const stringBuilder = (arr) => {\r\n                let result = '';\r\n                if(arr.length === 2) result = `${arr[0]['name']} & ${arr[1]['name']}`;\r\n                else {\r\n                    arr.forEach(data => result+= `${data.name} `);\r\n                }\r\n                return result;\r\n            }\r\n            \r\n    \r\n            setDirector(stringBuilder(director));\r\n            setWriters(stringBuilder(writer));\r\n        }\r\n    }, [isLoading, castData.crew, setDirector, setWriters])\r\n\r\n    return (\r\n        <div className='single-movie-container cast-grid-container'>\r\n            <h2 className='extra-detail-title'>Cast</h2>\r\n                <div className='cast-grid'>\r\n                { \r\n                    !isLoading ? (\r\n                        castData.cast.slice(0, 12).map((castMember) => {\r\n                            return <CastCard key={ castMember.id } castMember={ castMember } />\r\n                        })\r\n                        ) : (\r\n                            <SkeletonCastGrid />\r\n                        ) \r\n                }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastGrid\r\n","import React, { useMemo } from 'react';\r\nimport './detailsTable.css';\r\n\r\nconst DetailsTable = ({ movieData }) => {\r\n    const currencyFormatter = useMemo(() => (new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    })), []);\r\n\r\n    return (\r\n        <table className='single-movie-details-table'>\r\n            <tbody>\r\n                {(movieData.homepage !== null) && (\r\n                    <tr>\r\n                        <td className='table-data-name'>Movie Website</td>\r\n                        <td> <a href={movieData.homepage} target='_blank' rel='noopener noreferrer'>{`${movieData.title} Website`} </a></td>\r\n                    </tr>\r\n                ) }\r\n                <tr>\r\n                    <td className='table-data-name'>Budget</td>\r\n                    <td>{ currencyFormatter.format(movieData.budget) }</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className='table-data-name'>Revenue</td>\r\n                    <td>{ currencyFormatter.format(movieData.revenue) }</td>\r\n                </tr>\r\n                {\r\n                    movieData.hasOwnProperty('production_countries') && (\r\n                        movieData.production_countries.length > 0 && (\r\n                            <>\r\n                                <tr>\r\n                                    <td className='table-data-name' rowSpan={movieData.production_countries.length}>\r\n                                        {movieData.production_countries.length > 1 ? 'Countries' :'Country'} shot in\r\n                                    </td>\r\n                                    <td>{movieData.production_countries[0]['name']}</td>\r\n                                </tr>\r\n                                {movieData.production_countries.slice(1).map((country, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{country.name}</td>\r\n                                    </tr>\r\n                                )) }\r\n                            </>)\r\n                    )\r\n                }\r\n                {\r\n                    movieData.hasOwnProperty('production_companies') && (\r\n                        movieData.production_companies.length > 0 && (\r\n                            <>\r\n                                <tr>\r\n                                    <td className='table-data-name' rowSpan={movieData.production_companies.length}>\r\n                                        {movieData.production_companies.length > 1 ? 'Production Companies' :'Production Company'}\r\n                                    </td>\r\n                                    <td>{movieData.production_companies[0]['name']}</td>\r\n                                </tr>\r\n                                { movieData.production_companies.slice(1).map((company, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{company.name}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </>\r\n                        )\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default DetailsTable\r\n","import React from 'react';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport './movieAvailability.css';\r\n\r\nconst MovieAvailability = ({ movieId }) => {\r\n    const { data, isLoading } = useFetch(`${process.env.REACT_APP_API_BASE_URL}/movie/${movieId}/watch/providers?api_key=${process.env.REACT_APP_API_KEY}`);\r\n    \r\n    const getStreamingInfoFromData = () => {\r\n        //Data needs to contains 'GB' object and 'flatrate' property within to get results\r\n        if(!isLoading && (data.results).hasOwnProperty('GB')) {\r\n            if((data.results['GB']).hasOwnProperty('flatrate')) {\r\n                return (\r\n                    data.results['GB']['flatrate'].map((provider, index) => (\r\n                        <div className='movie-provider' key={index}>\r\n                            <img className='movie-provider-logo-img'\r\n                                src={ `https://image.tmdb.org/t/p/w500/${provider.logo_path}` } \r\n                                alt={`${provider.provider_name}`} />\r\n                            <p className='movie-provider-name'>{provider.provider_name}</p>\r\n                        </div>\r\n                    )) \r\n                )\r\n            }\r\n        }\r\n\r\n        return(<p>Currently Not Streaming in the UK</p>)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h2 className='single-movie-subtitle'>Where to Watch (via JustWatch)</h2>\r\n            <div className='movie-providers-list'>\r\n                {\r\n                    !isLoading && (\r\n                        getStreamingInfoFromData()\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieAvailability;","import React from 'react';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport HorizontalMoviesList from '../../../shared/horizontalMoviesList/HorizontalMoviesList';\r\nimport SkeletonHorizontalList from '../../../../skeletons/skeletonHorizontalList/SkeletonHorizontalList';\r\n\r\nconst RelatedMovies = ({ movieId }) => {\r\n    const { data:relatedMovies, isLoading:isRelatedMoviesLoading } = useFetch(`${process.env.REACT_APP_API_BASE_URL}/movie/${movieId}/similar?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\r\n\r\n    return (\r\n        <div className='single-movie-container'>\r\n                <h2 className='extra-detail-title'>Related Movies</h2>\r\n                {\r\n                    !isRelatedMoviesLoading ? (\r\n                        <HorizontalMoviesList list={ relatedMovies.results.slice(0, 10) } />\r\n                    ) : (\r\n                        <SkeletonHorizontalList />\r\n                    )\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RelatedMovies\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\nimport './skeletonSingleMovie.css';\r\n\r\nconst SkeletonSingleMovie = () => {\r\n    return (\r\n        <div className='skeleton-wrapper skeleton-single-movie-container'>\r\n            <ShimmerAnimation />\r\n            <BaseSkeleton type='image' />\r\n            <div className='skeleton-single-movie-details'>\r\n                <BaseSkeleton type='title' />\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='text' /><br/><br />\r\n                <BaseSkeleton type='title' />\r\n                <BaseSkeleton type='text' /><br/>\r\n                <BaseSkeleton type='title' />\r\n                <BaseSkeleton type='text' /><br/><br />\r\n                <div className='skeleton-single-movie-where-to-watch'>\r\n                    <BaseSkeleton type='title' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonSingleMovie;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addMovie } from '../../../redux/movies/myMoviesSlice';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport Spinner from '../../shared/loadingSpinner/Spinner';\r\nimport CastGrid from './castGrid/CastGrid';\r\nimport DetailsTable from './detailsTable/DetailsTable';\r\nimport MovieAvailability from './movieAvailability/MovieAvailability';\r\nimport RelatedMovies from './relatedMovies/RelatedMovies';\r\nimport { getaverageRatingBackgroundColor } from '../../../helpers/getAverageRatingBackgroundColor';\r\nimport \"./singleMoviesPage.css\";\r\nimport SkeletonSingleMovie from '../../../skeletons/skeletonSingleMovie/SkeletonSingleMovie';\r\n\r\nconst SingleMoviePage = () => {\r\n    let { movieId } = useParams();\r\n    const navigate = useNavigate();\r\n    \r\n    const [director, setDirector] = useState('');\r\n    const [writers, setWriters] = useState('');\r\n    const { data:movieData, isLoading } = useFetch(`${process.env.REACT_APP_API_BASE_URL}/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}`);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    //Scroll to top of page when component renders\r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n    }, [movieId])\r\n\r\n    const formatRuntime = (runtime) => {\r\n        //Format runtime to 'xxhrs xxmins'\r\n        const hours = Math.floor(runtime/60);\r\n        const mins = runtime % 60;\r\n        return `${hours}h ${mins}m`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='single-movie-page-container'>\r\n                {\r\n                    (!isLoading) ? (\r\n                        <section className='movie-details-container'>\r\n                            <div className='single-movie-poster-container'>\r\n                                <img className='single-movie-poster' src={`https://image.tmdb.org/t/p/original${movieData.poster_path}`} alt={`${ movieData.title } poster`} loading='lazy' />\r\n                            </div>\r\n                            <div className='single-movie-detail-container'>\r\n                                <h1 className='movie-title'>{movieData.title}</h1>\r\n                                <div className='single-movie-details-extra-title-details'>\r\n                                    <p>{formatRuntime(movieData.runtime)}</p>\r\n                                    <p>{movieData.release_date}</p>\r\n                                </div>\r\n                                <div className={`single-movie-details-percent ${getaverageRatingBackgroundColor(movieData.vote_average)}`}>\r\n                                    <p>{movieData.vote_average}</p>\r\n                                </div>\r\n                                <div className={(movieData.genres.length <= 2 ? 'single-movie-genres-small' : 'single-movie-genres-large')+' single-movie-genres'}>\r\n                                    { movieData.genres.map((genre) => (<p key={genre.id} \r\n                                                                            onClick={() => navigate(`/list/genre?genre_id=${genre.id}&genre=${genre.name}`)}>\r\n                                                                                { genre.name }\r\n                                                                        </p>)) }\r\n                                </div>\r\n                                <button onClick={ () => dispatch(addMovie(movieData)) } className='single-movie-add-to-my-movies-btn'>Add to my List</button>\r\n                                <div className='single-movie-overview'>\r\n                                    <h2 className='single-movie-subtitle'>Overview</h2>\r\n                                    <p>{ movieData.overview !== null ? movieData.overview : 'No Overview available' }</p>\r\n                                    { movieData.tagline && <p className='single-movie-overview-tagline'>{ movieData.tagline }</p>}\r\n                                </div>\r\n                                <div className='single-movie-director-writer-container'>\r\n                                    <div className='single-movie-director-container'>\r\n                                        <h2 className='single-movie-subtitle'>Director</h2>\r\n                                        <p>{ director }</p>\r\n                                    </div>\r\n                                    <div className='single-movie-writer-container'>\r\n                                        <h2 className='single-movie-subtitle'>Writers</h2>\r\n                                        <p>{ writers }</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='single-movie-watch-providers'>\r\n                                    <MovieAvailability movieId={ movieId } />\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    ) :\r\n                    (\r\n                        <SkeletonSingleMovie />\r\n                    )\r\n                }\r\n            </div>\r\n            \r\n            <CastGrid movieId={ movieId } setDirector={ setDirector } setWriters={ setWriters } />\r\n\r\n            <div className='single-movie-container'>\r\n                <h2 className='extra-detail-title'>More Details</h2>\r\n                {\r\n                    !isLoading ? (\r\n                        <DetailsTable movieData={ movieData } />\r\n                    ) : (\r\n                        <Spinner />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <RelatedMovies movieId={ movieId } />\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleMoviePage\r\n","import React from 'react';\r\nimport MovieCard from '../movieCard/MovieCard';\r\nimport './moviesGrid.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst ResultGrid = ({ data, isAddToMyMovies = true }) => {\r\n    return (\r\n        <div className='results-grid-container'>\r\n            <TransitionGroup component={null}>\r\n            {\r\n                data.map(movie => (\r\n                    <CSSTransition key={ movie.id } timeout={300} classNames='result-transition'>\r\n                        <div className='results-grid-result-container'>\r\n                            <MovieCard movie={ movie } isAddToMyMovies={ isAddToMyMovies } />\r\n                        </div>\r\n                    </CSSTransition>\r\n                ))\r\n            }\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultGrid\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\nimport './skeletonMovieGrid.css';\r\n\r\nconst SkeletonMovieGrid = () => {\r\n    const getNumSkeletonMovieCards = () => {\r\n        let cards = [];\r\n        for(let i = 0; i < 12; i++) {\r\n            cards.push(i);\r\n        }\r\n\r\n        return cards;\r\n    }\r\n    return (\r\n        <div className='skeleton-wrapper skeleton-movie-grid-wrapper'>\r\n            <ShimmerAnimation />\r\n            <div className='skeleton-movie-grid-container'>\r\n                {\r\n                    getNumSkeletonMovieCards().map(num => <BaseSkeleton key={num} type='card' />)\r\n                }\r\n            </div>\r\n            <br />\r\n            <BaseSkeleton type='button' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonMovieGrid;\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport './listOfMovies.css';\r\nimport MoviesGrid from '../../shared/moviesGrid/MoviesGrid';\r\nimport SkeletonMovieGrid from '../../../skeletons/skeletonMovieGrid/SkeletonMovieGrid';\r\n\r\nconst ListOfMovies = () => {\r\n    const [results, setResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [searchParams, ] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const query = searchParams.get('query');\r\n    const genreId = searchParams.get('genre_id');\r\n    const genreName = searchParams.get('genre');\r\n\r\n    const upperCaseWords = useCallback((string) => {\r\n        const capitalise = (word) => word.charAt(0).toUpperCase() + word.slice(1);\r\n        return string.split(' ').map(word => capitalise(word)).join(' ');\r\n    }, []);\r\n\r\n    const urls = useMemo(() => ({\r\n        trending: `${process.env.REACT_APP_API_BASE_URL}/trending/movie/week?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`,\r\n        \"new releases\": `${process.env.REACT_APP_API_BASE_URL}/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-GB&page=${page}`,\r\n        search: `${process.env.REACT_APP_API_BASE_URL}/search/movie?query=${query}&api_key=${process.env.REACT_APP_API_KEY}&page=${page}`,\r\n        \"top rated\": `${process.env.REACT_APP_API_BASE_URL}/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`,\r\n        genre: `${process.env.REACT_APP_API_BASE_URL}/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=${genreId}&page=${page}&sort_by=popularity.desc&include_adult=false`\r\n    }), [genreId, page, query]);\r\n\r\n    const fetchFreshData = useCallback(async () => {\r\n        await fetch(urls[params.type])\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw new Error(\"Error Fetching Data. Response not OK\");\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(resData =>{\r\n                        setResults(resData.results)\r\n                        setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    setIsLoading(false);\r\n                });\r\n    }, [params.type, urls]);\r\n\r\n    //run only when page state increases to add data to end of results state and not override\r\n    useEffect(() => {\r\n        (async() => {\r\n            await fetch(urls[params.type])\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw new Error(\"Error Fetching Data. Response not OK\");\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(resData =>{\r\n                        setResults(prevState => [...prevState, ...resData.results])\r\n                        setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    setIsLoading(false);\r\n                });\r\n        })()\r\n    }, [page])\r\n\r\n    //only run when a new list is being shown (remove state and start fresh)\r\n    useEffect(() => {\r\n        if(urls[params.type] === undefined) {\r\n            navigate(\"*\");\r\n        }\r\n        fetchFreshData();\r\n\r\n    }, [params.type, navigate, query, genreId])\r\n\r\n    const onMoreBtnClick = () => setPage(page+1);\r\n\r\n    const getPageTitle = () => {\r\n        //function to get the title based on url\r\n        if(params.type !== 'search'){\r\n            return upperCaseWords(params.type !== 'genre' ? params.type : `${params.type} - ${genreName}` );\r\n        }\r\n        return `Search for \"${query}\"`;\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/* Show title if not from search term */}\r\n            <h1 className='container-title'>{ getPageTitle() }</h1>\r\n            {\r\n                !isLoading ? (\r\n                    <div className='list-of-movies-grid-container'>\r\n                        <MoviesGrid data={ results } />\r\n                        <button className='primary-btn more-results-btn' onClick={ onMoreBtnClick }>More Results</button>\r\n                    </div>\r\n                ) :\r\n                <SkeletonMovieGrid />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfMovies;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactComponent as CinemaSvgGraphic} from './undraw_home_cinema_l7yl.svg';\r\nimport './notFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='not-found'>\r\n            <div className='not-found-text-container'>\r\n                <h2>404 <span>- Content not Found</span></h2>\r\n                <div className='not-found-decor-line' />\r\n                <h1>Hmmm... We could not find what your were looking for</h1>\r\n                <div className='not-found-links'>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <div className='not-found-links-divider'></div>\r\n                    <Link to=\"/list/my-movies\">Your Saved Movies</Link>\r\n                    <div className='not-found-links-divider'></div>\r\n                    <Link to=\"/list/trending\">Trending Movies</Link>\r\n                    <div className='not-found-links-divider'></div>\r\n                    <Link to=\"/list/new%20releases\">Latest Releases</Link>\r\n                </div>\r\n            </div>\r\n            <CinemaSvgGraphic className='not-found-graphic' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MoviesGrid from '../../shared/moviesGrid/MoviesGrid';\r\n\r\nconst MyMovies = () => {\r\n    const myMovies = useSelector(state => state.myMovies.movies);\r\n\r\n    return(\r\n        <div className='container'>\r\n            <h1 className='container-title'>My Movies</h1>\r\n                {\r\n                    myMovies.length === 0 ?\r\n                        <p style={{color:'#fff'}}>No Movies in your list. Find your favourite movies to add them!</p> :\r\n                        (\r\n                            //Add ResultsGrid wrapped in CSSTransition to animate exit of movie card\r\n                            <MoviesGrid data={ myMovies } isAddToMyMovies={ false } />\r\n                        )\r\n                }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyMovies;\r\n","import React from 'react';\r\nimport BaseSkeleton from '../BaseSkeleton';\r\nimport ShimmerAnimation from '../ShimmerAnimation';\r\n\r\nconst SkeletonGenresGrid = () => {\r\n    return (\r\n        [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].map(index => (\r\n            <div className='skeleton-wrapper' key={index}>\r\n                <ShimmerAnimation />\r\n                <BaseSkeleton type='tab' />\r\n            </div>\r\n        ))\r\n\r\n    );\r\n};\r\n\r\nexport default SkeletonGenresGrid;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchGenresList } from '../../../../../redux/movies/genresSlice';\r\nimport SkeletonGenresGrid from '../../../../../skeletons/skeletonGenresGrid/SkeletonGenresGrid';\r\nimport GenreTab from '../../../../shared/genreTab/GenreTab';\r\nimport './genresSection.css';\r\n\r\nconst GenresSection = () => {\r\n    const { genresList, isLoading } = useSelector(state => state.genres);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(genresList.length === 0){\r\n            dispatch(fetchGenresList());\r\n        }\r\n    }, [dispatch, genresList.length])\r\n\r\n    return(\r\n        <section className='genres-section'>\r\n            <h2 className='sub-title'>Genres</h2>\r\n            <div className='genres-grid'>\r\n                {\r\n                    !isLoading ? (\r\n                        genresList.map(genre => <GenreTab genre={ genre } key={ genre.id }/>)\r\n                    ) : (\r\n                        <SkeletonGenresGrid />\r\n                    )\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default GenresSection;\r\n","import React, { useEffect } from 'react';\r\nimport GenresSection from './genresSection/GenresSection';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTrendingList } from '../../../../redux/movies/trendingMoviesSlice'; \r\nimport HorizontalMoviesList from '../../../shared/horizontalMoviesList/HorizontalMoviesList';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './listOfMoviesNoParams.css';\r\nimport SkeletonHorizontalList from '../../../../skeletons/skeletonHorizontalList/SkeletonHorizontalList';\r\n\r\n//Component when user navigates to '/list' will offer navigation to list of trending, new releases etc...\r\nconst ListOfMoviesNoParams = () => {\r\n    const { trendingList, isLoading } = useSelector(state => state.trendingMovies);\r\n    const myMovies = useSelector(state => state.myMovies.movies);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if(trendingList.length === 0) {\r\n            dispatch(fetchTrendingList());\r\n        }\r\n    }, [dispatch, trendingList.length])\r\n\r\n    return( \r\n        <div className='container list-of-movies-no-params'>\r\n            <h1 className='container-title'>What kind of List are you looking for?</h1>\r\n            <GenresSection />\r\n            {\r\n                (myMovies.length !== 0) && (\r\n                    <section className='list-of-movies-no-params-my-movies-section'>\r\n                        <h2 className='sub-title'>My Movies</h2>\r\n                        <HorizontalMoviesList list={ (myMovies.length > 15 ? myMovies.slice(0,15) : myMovies) } \r\n                            isAddToMyMovies={false} />\r\n                            <button className='list-of-movies-no-params-btn'\r\n                                onClick={ () => navigate(`/list/my-movies`) }>Explore your movies list</button>\r\n                    </section>\r\n                ) \r\n            }\r\n            <section className='list-of-movies-no-params-trending-section'>\r\n                <h2 className='sub-title'>Trending</h2>\r\n                {\r\n                    !isLoading ? (\r\n                        <>\r\n                            <HorizontalMoviesList list={ trendingList.slice(0, 15) } />\r\n                            <button className='list-of-movies-no-params-btn'\r\n                                onClick={ () => navigate(`/list/trending`) }>Explore more Trending Movies</button>\r\n                        </>\r\n                    ) : (\r\n                        <SkeletonHorizontalList />\r\n                    )\r\n                }\r\n            </section>\r\n        </div>)\r\n};\r\n\r\nexport default ListOfMoviesNoParams;\r\n","import './App.css';\nimport Nav from './components/layout/nav/Nav';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Footer from './components/layout/footer/Footer';\nimport HomePage from './components/pages/homePage/HomePage';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SingleMoviePage from './components/pages/singleMoviePage/SingleMoviePage';\nimport ListOfMovies from './components/pages/listOfMoviesPage/ListOfMovies';\nimport NotFound from './components/pages/notFoundPage/NotFound';\nimport MyMovies from './components/pages/myMoviesPage/MyMovies';\nimport ListOfMoviesNoParams from './components/pages/listOfMoviesPage/listOfMoviesNoParams/ListOfMoviesNoParams';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={ store }>\n\n          <BrowserRouter>\n            <Nav />\n\n                <Routes>\n                    <Route path=\"/\">\n                      <Route index element={ <HomePage /> } />\n                      <Route path=\"movie/:movieId\" element={ <SingleMoviePage /> } />\n                      <Route path=\"list\">\n                          <Route path=\"my-movies\" element={ <MyMovies /> } />\n                          <Route path=\":type\" element={ <ListOfMovies /> } />\n                          <Route path=\"\" element={ <ListOfMoviesNoParams /> } />\n                      </Route>\n                      <Route path=\"*\" element={ <NotFound /> } />\n                    </Route>\n                </Routes>\n\n              <Footer />\n          </BrowserRouter>\n\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}